<?xml version="1.0"?>

<!-- McDonnell Douglas DC-10 FCC -->
<!-- Copyright (c) 2024 Josh Davidson (Octal450) -->

<system name="DC-10: FCC">
	
	<property value="0">fcc/aileron-out-enable</property>
	<property value="0">fcc/cws-roll/input</property>
	
	<property value="160">fcc/speeds/v2-plus-10</property>
	<property value="356">fcc/speeds/vmax</property>
	
	<!-- Properties for tuning -->
	<property value="0">fcc/cws-roll/p-gain-tune</property>
	<property value="0">fcc/cws-roll/i-gain-tune</property>
	<property value="0">fcc/cws-roll/d-gain-tune</property>
	<property value="0">fcc/cws-pitch/p-gain-tune</property>
	<property value="0">fcc/cws-pitch/i-gain-tune</property>
	<property value="0">fcc/cws-pitch/d-gain-tune</property>
	<property value="0">fcc/yaw/yd-p-gain-tune</property>
	<property value="0">fcc/yaw/tc-p-gain-tune</property>
	<property value="0">fcc/yaw/tc-d-gain-tune</property>
	
	<channel name="Libraries">
		
		<switch name="fcc/fcc1-power">
			<default value="0"/>
			<test logic="OR" value="1">
				/systems/electrical/bus/dc-1 ge 24
				/systems/electrical/bus/l-emer-dc ge 24
			</test>
		</switch>
		
		<switch name="fcc/fcc2-power">
			<default value="0"/>
			<test logic="OR" value="1">
				/systems/electrical/bus/dc-3 ge 24
				/systems/electrical/bus/r-emer-dc ge 24
			</test>
		</switch>
		
		<switch name="fcc/power-avail">
			<default value="0"/>
			<test logic="OR" value="1">
				fcc/fcc1-power eq 1
				fcc/fcc2-power eq 1
			</test>
		</switch>
		
		<switch name="fcc/afs/enabled">
			<default value="0"/>
			<test logic="AND" value="1">
				/it-autoflight/output/ap1 eq 1
				/it-autoflight/input/fgs1-sel eq 2
			</test>
			<test logic="AND" value="1">
				/it-autoflight/output/ap2 eq 1
				/it-autoflight/input/fgs2-sel eq 2
			</test>
		</switch>
		
		<switch name="fcc/cws/enabled">
			<default value="0"/>
			<test value="0"> <!-- Either CMD engages overrides CWS -->
				fcc/afs/enabled eq 1
			</test>
			<test logic="AND" value="1">
				/it-autoflight/output/ap1 eq 1
				/it-autoflight/input/fgs1-sel eq 1
			</test>
			<test logic="AND" value="1">
				/it-autoflight/output/ap2 eq 1
				/it-autoflight/input/fgs2-sel eq 1
			</test>
		</switch>
		
		<fcs_function name="fcc/cws-roll/p-rad_sec">
			<function>
				<toradians>
					<property>/orientation/roll-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-pitch/thetadot-rad_sec">
			<function>
				<toradians>
					<property>/orientation/pitch-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<summer name="/it-autoflight/input/alt-diff">
			<input>/instrumentation/altimeter/indicated-altitude-ft</input>
			<input>-/it-autoflight/input/alt</input>
		</summer>
		
		<fcs_function name="/it-autoflight/input/alt-diff-abs">
			<function>
				<abs>
					<property>/it-autoflight/input/alt-diff</property>
				</abs>
			</function>
		</fcs_function>
		
		<summer name="/it-autoflight/internal/alt-diff">
			<input>/instrumentation/altimeter/indicated-altitude-ft</input>
			<input>-/it-autoflight/internal/alt</input>
		</summer>
		
		<fcs_function name="/it-autoflight/internal/alt-diff-abs">
			<function>
				<abs>
					<property>/it-autoflight/internal/alt-diff</property>
				</abs>
			</function>
		</fcs_function>
	
	</channel>
	
	<channel name="Envelope Protection Calculations" execrate="8">
		
		<!-- V2 --> <!-- Also check dc-10-performance.xml -->
		<switch name="fcc/speeds/flap-wow-switch">
			<default value="fcs/flap-pos-deg"/>
			<test value="fcc/speeds/flap-wow-switch">
				position/wow eq 0
			</test>
		</switch>
		
		<fcs_function name="fcc/speeds/v2">
			<function>
				<table>
					<independentVar lookup="row">inertia/weight-kg</independentVar>
					<independentVar lookup="column">fcc/speeds/flap-wow-switch</independentVar>
					<tableData>
						        10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   28
						160000  149  149  148  148  146  146  145  145  143  143  142  142  142  142  141  141  138
						165000  151  151  150  150  148  148  147  147  145  145  144  144  144  144  143  143  140
						170000  153  153  151  151  150  150  148  148  147  147  146  146  145  145  144  144  142
						175000  155  155  153  153  152  152  150  150  149  149  148  148  147  147  146  146  144
						180000  157  157  155  155  153  153  152  152  151  151  149  149  149  149  148  148  145
						185000  159  159  157  157  155  155  154  154  153  153  151  151  151  151  150  150  147
						190000  160  160  158  158  157  157  155  155  154  154  153  153  152  152  151  151  148
						195000  162  162  160  160  159  159  157  157  156  156  155  155  154  154  153  153  150
						200000  164  164  162  162  160  160  159  159  157  157  156  156  155  155  154  154  151
						205000  166  166  164  164  162  162  161  161  159  159  158  158  157  157  156  156  153
						210000  167  167  165  165  164  164  162  162  161  161  159  159  158  158  158  158  155
						215000  169  169  167  167  166  166  164  164  163  163  161  161  160  160  159  159  156
						220000  170  170  168  168  167  167  165  165  164  164  162  162  161  161  160  160  157
						225000  172  172  171  171  169  169  167  167  166  166  164  164  163  163  162  162  159
						230000  173  173  172  172  170  170  168  168  167  167  165  165  164  164  163  163  160
						235000  175  175  174  174  172  172  170  170  169  169  167  167  166  166  165  165  162
						240000  177  177  175  175  173  173  172  172  170  170  169  169  168  168  167  167  164
						245000  179  179  177  177  175  175  174  174  172  172  171  171  170  170  169  169  166
						250000  180  180  178  178  176  176  175  175  173  173  172  172  171  171  170  170  167
						255000  182  182  180  180  178  178  177  177  175  175  174  174  173  173  172  172  169
						260000  184  184  182  182  179  179  178  178  176  176  175  175  174  174  173  173  170
						265000  186  186  184  184  181  181  180  180  178  178  177  177  176  176  175  175  172
						270000  187  187  185  185  183  183  181  181  180  180  178  178  177  177  176  176  173
						275000  189  189  187  187  185  185  183  183  181  181  180  180  179  179  178  178  175
						280000  190  190  188  188  186  186  184  184  182  182  181  181  180  180  179  179  176
						285000  192  192  190  190  188  188  186  186  184  184  183  183  182  182  181  181  178
						290000  193  193  191  191  189  189  187  187  185  185  184  184  183  183  182  182  179
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/speeds/v2-plus-10">
			<function>
				<sum>
					<property>fcc/speeds/v2</property>
					<value>10</value>
				</sum>
			</function>
		</fcs_function>
		
		<switch name="fcc/speeds/v2-target-ias-input">
			<default value="/instrumentation/airspeed-indicator/indicated-speed-kt"/>
			<test logic="AND" value="fcc/speeds/v2-target-ias-input">
				libraries/any-engine-out eq 1
			</test>
		</switch>
		
		<fcs_function name="fcc/speeds/v2-target"> <!-- Target V2 for TAKE OFF or G/A -->
			<function>
				<integer>
					<sum>
						<ifthen>
							<eq>
								<property>libraries/any-engine-out</property>
								<value>1</value>
							</eq>
							<min>
								<max>
									<property>fcc/speeds/v2-target-ias-input</property>
									<property>fcc/speeds/v2</property>
								</max>
								<property>fcc/speeds/v2-plus-10</property>
							</min>
							<property>fcc/speeds/v2-plus-10</property>
						</ifthen>
						<value>0.5</value>
					</sum>
				</integer>
			</function>
		</fcs_function>
		
		<!-- Vmo/Mmo -->
		<fcs_function name="fcc/speeds/mmo-kts">
			<function>
				<product>
					<quotient>
						<property>/instrumentation/airspeed-indicator/indicated-speed-kt</property>
						<max> <!-- Prevent divide by 0 -->
							<property>/instrumentation/airspeed-indicator/indicated-mach</property>
							<value>0.0001</value>
						</max>
					</quotient>
					<value>0.88</value>
				</product>
			</function>
		</fcs_function>
		
		<switch name="fcc/speeds/vmo-mmo">
			<default value="356"/>
			<test logic="AND" value="fcc/speeds/mmo-kts">
				fcc/speeds/mmo-kts lt 356
				position/wow eq 0
			</test>
		</switch>
		
		<fcs_function name="fcc/nlg-timer-1/wow-timer-cmd">
			<function>
				<sum> <!-- Inverter, so that it is 1 at sim start -->
					<product>
						<property>gear/unit[0]/WOW</property>
						<value>-1</value>
					</product>
					<value>1</value>
				</sum>
			</function>
		</fcs_function>
		
		<actuator name="fcc/nlg-timer-1/wow-timer-pos">
			<input>fcc/nlg-timer-1/wow-timer-cmd</input>
			<rate_limit sense="incr">1000</rate_limit>
			<rate_limit sense="decr">1</rate_limit> <!-- 1 second -->
		</actuator>
		
		<fcs_function name="fcc/nlg-timer-1/wow-timer">
			<function>
				<sum> <!-- Inverter, so that it is 1 at sim start -->
					<product>
						<property>fcc/nlg-timer-1/wow-timer-pos</property>
						<value>-1</value>
					</product>
					<value>1</value>
				</sum>
			</function>
		</fcs_function>
		
		<!-- Vss -->
		<fcs_function name="fcc/speeds/vss">
			<function>
				<table>
					<independentVar lookup="row">inertia/weight-kg</independentVar>
					<independentVar lookup="column">fcs/flap-pos-deg</independentVar>
					<independentVar lookup="table">fcs/slat-pos-deg</independentVar>
					<tableData breakPoint="0"> <!-- Values clipped and rounded down so Vmin (FAA Stall * 1.3) won't exceed flap max (as per manual) -->
						        0       15      25      28      35      50
						140000  144.22  136.92  132.31  131.54  129.88  128.22
						160000  153.53  145.38  141.54  140.77  138.99  136.26
						180000  162.38  153.85  149.23  148.46  146.31  142.91
						200000  170.63  161.54  156.92  155.38  152.93  147.24
						220000  178.56  169.23  163.85  163.08  156.15  149.61
						240000  185.73  176.15  170.77  170.01  161.15  149.61
						260000  193.14  183.08  177.69  176.53  161.15  149.61
						280000  199.93  190.01  184.23  176.53  161.15  149.61
					</tableData>
					<tableData breakPoint="31">
						        0       10      15      20      25      28      35      50
						140000  119.19  115.99  113.85  112.33  111.47  110.89  109.48  108.07
						160000  126.75  123.24  120.95  119.42  118.40  117.69  116.19  113.89
						180000  133.92  130.11  127.59  126.06  125.02  124.36  122.55  119.68
						200000  140.64  136.67  134.15  132.47  131.34  130.63  128.56  124.98
						220000  147.05  142.62  140.41  138.35  137.30  136.55  134.34  130.14
						240000  153.07  148.65  145.98  143.99  142.82  142.07  139.77  135.00
						260000  158.87  154.52  151.62  149.56  148.16  147.37  145.03  139.77
						280000  164.52  159.94  156.74  154.74  153.33  152.58  150.24  144.19
					</tableData>
				</table>
			</function>
			<clipto>
				<min>0</min>
				<max>fcc/speeds/vmo-mmo</max>
			</clipto>
		</fcs_function>
		
		<!-- Vmin -->
		<fcs_function name="fcc/speeds/vmin">
			<function>
				<product>
					<difference>
						<property>fcc/speeds/vss</property>
						<value>15</value>
					</difference>
					<sum>
						<value>1.3</value> <!-- 1.3 Vstall -->
						<table>
							<independentVar lookup="row">atmosphere/density-altitude</independentVar>
							<tableData>
								    0  0.0000
								45000  0.2302
							</tableData>
						</table>
					</sum>
				</product>
			</function>
			<clipto>
				<min>fcc/speeds/vss</min>
				<max>100000</max>
			</clipto>
		</fcs_function>
		
		<fcs_function name="fcc/speeds/vmin-mach">
			<function>
				<product>
					<quotient>
						<property>/instrumentation/airspeed-indicator/indicated-mach</property>
						<max> <!-- Prevent divide by 0 -->
							<property>/instrumentation/airspeed-indicator/indicated-speed-kt</property>
							<value>0.0001</value>
						</max>
					</quotient>
					<property>fcc/speeds/vmin</property>
				</product>
			</function>
		</fcs_function>
	
	</channel>
	
	<channel name="Yaw Damper Logic">
		
		<switch name="fcc/yaw/avail-upper-a">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fcc/switches/yd-upper-a eq 1
				<test logic="OR">
					/systems/hydraulics/sys-1-psi ge 2200
					/systems/hydraulics/nrmp/sys-2-to-sys-1 ge 2200
				</test>
				/systems/electrical/bus/dc-3 ge 24
				/systems/failures/fcc/yd-upper-a ne 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/avail-upper-b">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fcc/switches/yd-upper-b eq 1
				<test logic="OR">
					/systems/hydraulics/sys-1-psi ge 2200
					/systems/hydraulics/nrmp/sys-2-to-sys-1 ge 2200
				</test>
				/systems/electrical/bus/dc-3 ge 24
				/systems/failures/fcc/yd-upper-b ne 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/avail-lower-a">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fcc/switches/yd-lower-a eq 1
				<test logic="OR">
					/systems/hydraulics/sys-2-psi ge 2200
					/systems/hydraulics/nrmp/sys-3-to-sys-2 ge 2200
				</test>
				/systems/electrical/bus/dc-1 ge 24
				/systems/failures/fcc/yd-lower-a ne 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/avail-lower-b">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fcc/switches/yd-lower-b eq 1
				<test logic="OR">
					/systems/hydraulics/sys-2-psi ge 2200
					/systems/hydraulics/nrmp/sys-3-to-sys-2 ge 2200
				</test>
				/systems/electrical/bus/dc-1 ge 24
				/systems/failures/fcc/yd-lower-b ne 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/active">
			<default value="0"/>
			<test logic="OR" value="0">
				position/wow eq 1
				/position/gear-agl-ft lt 50
			</test>
			<test logic="OR" value="1">
				fcc/yaw/avail-upper-a eq 1
				fcc/yaw/avail-upper-b eq 1
				fcc/yaw/avail-lower-a eq 1
				fcc/yaw/avail-lower-b eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/upper-active">
			<default value="0"/>
			<test logic="OR" value="1">
				fcc/yaw/avail-upper-a eq 1
				fcc/yaw/avail-upper-b eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/lower-active">
			<default value="0"/>
			<test logic="OR" value="1">
				fcc/yaw/avail-lower-a eq 1
				fcc/yaw/avail-lower-b eq 1
			</test>
		</switch>
		
		<summer name="fcc/yaw/channels-active">
			<input>fcc/yaw/upper-active</input>
			<input>fcc/yaw/lower-active</input>
		</summer>
	
	</channel>
	
	<channel name="CWS Logic">
		
		<switch name="fcc/cws-roll/in-detent">
			<default value="fcc/cws-roll/in-detent"/>
			<test logic="AND" value="1">
				/controls/flight/aileron lt 0.02
				/controls/flight/aileron gt -0.02
				fcc/cws-roll/input lt 0.02
				fcc/cws-roll/input gt -0.02
			</test>
			<test logic="OR" value="0">
				/controls/flight/aileron gt 0.045
				/controls/flight/aileron lt -0.045
				fcc/cws-roll/input gt 0.045
				fcc/cws-roll/input lt -0.045
			</test>
		</switch>
		
		<switch name="fcc/cws-pitch/in-detent">
			<default value="fcc/cws-pitch/in-detent"/>
			<test logic="AND" value="1">
				/controls/flight/elevator lt 0.02
				/controls/flight/elevator gt -0.02
				fcc/cws-pitch/input lt 0.02
				fcc/cws-pitch/input gt -0.02
			</test>
			<test logic="OR" value="0">
				/controls/flight/elevator gt 0.045
				/controls/flight/elevator lt -0.045
				fcc/cws-pitch/input gt 0.045
				fcc/cws-pitch/input lt -0.045
			</test>
		</switch>
		
		<switch name="fcc/cws/active-no-wow">
			<default value="0"/>
			<test logic="AND" value="1">
				fcc/cws/enabled eq 1
				fcc/afs/enabled eq 0
			</test>
		</switch>
		
		<switch name="fcc/cws/active">
			<default value="0"/>
			<test logic="AND" value="1">
				fcc/cws/active-no-wow eq 1
				position/wow eq 0
			</test>
		</switch>
	
	</channel>
	
	<channel name="Gains">
		
		<fcs_function name="fcc/cws-roll/p-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140 -20
							360  -7
						</tableData>
					</table>
					<!--property>fcc/cws-roll/p-gain-tune</property--> <!-- For tuning -->
					<property>fcc/cws/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-roll/i-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140 -28
							360 -14
						</tableData>
					</table>
					<!--property>fcc/cws-roll/i-gain-tune</property--> <!-- For tuning -->
					<property>fcc/cws/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-roll/d-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140 -2.9
							360 -0.7
						</tableData>
					</table>
					<!--property>fcc/cws-roll/d-gain-tune</property--> <!-- For tuning -->
					<property>fcc/cws/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-pitch/p-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140  30
							360  20
						</tableData>
					</table>
					<!--property>fcc/cws-pitch/p-gain-tune</property--> <!-- For tuning -->
					<property>fcc/cws/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-pitch/i-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140  60
							360  40
						</tableData>
					</table>
					<!--property>fcc/cws-pitch/i-gain-tune</property--> <!-- For tuning -->
					<property>fcc/cws/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-pitch/d-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140  5.0
							360  1.8
						</tableData>
					</table>
					<!--property>fcc/cws-pitch/d-gain-tune</property--> <!-- For tuning -->
					<property>fcc/cws/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/yaw/yd-p-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140 -7.5
							360 -1.0
						</tableData>
					</table>
					<!--property>fcc/yaw/yd-p-gain-tune</property--> <!-- For tuning -->
					<property>fcc/yaw/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/yaw/tc-p-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140  1.5
							360  0.5
						</tableData>
					</table>
					<!--property>fcc/yaw/tc-p-gain-tune</property--> <!-- For tuning -->
					<property>fcc/yaw/active</property>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/yaw/tc-d-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<tableData>
							140  3.0
							360  1.0
						</tableData>
					</table>
					<!--property>fcc/yaw/tc-d-gain-tune</property--> <!-- For tuning -->
					<property>fcc/yaw/active</property>
				</product>
			</function>
		</fcs_function>
	
	</channel>
	
	<channel name="FCC: Roll CWS">
		
		<switch name="fcc/cws-roll/p-switched">
			<default value="fcc/cws-roll/p-rad_sec"/>
			<test value="0">
				gear/unit[0]/WOW eq 1
			</test>
		</switch>
		
		<lead_lag_filter name="fcc/cws-roll/p-leadlag">
			<input>fcc/cws-roll/p-switched</input>
			<c1>1.05</c1>
			<c2>1.0</c2>
			<c3>0.97</c3>
			<c4>1.0</c4>
		</lead_lag_filter>
		
		<fcs_function name="fcc/cws-roll/aileron-nul">
			<function>
				<ifthen>
					<eq>
						<property>fcc/cws-roll/in-detent</property>
						<value>1</value>
					</eq>
					<value>0</value>
					<property>/controls/flight/aileron</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-roll/input">
			<function>
				<table>
					<independentVar lookup="row">attitude/roll-rad</independentVar>
					<independentVar lookup="column">fcc/cws-roll/aileron-nul</independentVar>
					<tableData>
						          -1    0    1
						-1.047200 -0.5  1.0  1.0
						-0.523599 -1.0  0.0  1.0
						 0.523599 -1.0  0.0  1.0
						 1.047200 -1.0 -1.0  0.5
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="fcc/cws-roll/input-switch">
			<default value="fcc/cws-roll/input"/>
			<test value="0">
				fcc/cws-roll/in-detent eq 1
			</test>
		</switch>
		
		<actuator name="fcc/cws-roll/input-slow">
			<input>fcc/cws-roll/input-switch</input>
			<rate_limit>1.0</rate_limit>
		</actuator>
		
		<lag_filter name="fcc/cws-roll/input-demand">
			<input>fcc/cws-roll/input-slow</input>
			<c1>3.5</c1>
		</lag_filter>
		
		<pure_gain name="fcc/cws-roll/rate-demand">
			<input>fcc/cws-roll/input-demand</input>
			<gain>0.261799</gain>
		</pure_gain>
		
		<summer name="fcc/cws-roll/rate-error">
			<input>fcc/cws-roll/p-leadlag</input>
			<input>-fcc/cws-roll/rate-demand</input>
		</summer>
		
		<scheduled_gain name="fcc/cws-roll/p-gain-scheduled"> <!-- Schedule gain to compensate for inactive ailerons -->
			<input>fcc/cws-roll/p-gain</input>
			<table>
				<independentVar lookup="row">fcc/aileron-out-enable</independentVar>
				<tableData>
					0  1.00
					1  0.72
				</tableData>
			</table>
		</scheduled_gain>
		
		<scheduled_gain name="fcc/cws-roll/i-gain-scheduled"> <!-- Schedule gain to compensate for inactive ailerons -->
			<input>fcc/cws-roll/i-gain</input>
			<table>
				<independentVar lookup="row">fcc/aileron-out-enable</independentVar>
				<tableData>
					0  1.00
					1  0.72
				</tableData>
			</table>
		</scheduled_gain>
		
		<scheduled_gain name="fcc/cws-roll/d-gain-scheduled"> <!-- Schedule gain to compensate for inactive ailerons -->
			<input>fcc/cws-roll/d-gain</input>
			<table>
				<independentVar lookup="row">fcc/aileron-out-enable</independentVar>
				<tableData>
					0  1.00
					1  0.72
				</tableData>
			</table>
		</scheduled_gain>
		
		<switch name="fcc/cws-roll/trigger">
			<default value="0"/>
			<test value="-1">
				fcc/cws/active ne 1
			</test>
			<test logic="OR" value="1">
				fcc/cws-roll/pid le -0.999
				fcc/cws-roll/pid ge 0.999
			</test>
		</switch>
		
		<pid name="fcc/cws-roll/pid">
			<input>fcc/cws-roll/rate-error</input>
			<kp>fcc/cws-roll/p-gain-scheduled</kp>
			<ki>fcc/cws-roll/i-gain-scheduled</ki>
			<kd>fcc/cws-roll/d-gain-scheduled</kd>
			<trigger>fcc/cws-roll/trigger</trigger>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</pid>
		
		<lag_filter name="fcc/cws-roll/output">
			<input>fcc/cws-roll/pid</input>
			<c1>10</c1>
		</lag_filter>
		
		<switch name="fcc/roll-output">
			<default value="/controls/flight/aileron"/>
			<test value="fcc/cws-roll/output">
				fcc/cws/active eq 1
			</test>
			<test value="fcc/afs/roll-cmd">
				fcc/afs/enabled eq 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="FCC: Pitch CWS">
		
		<switch name="fcc/cws-pitch/thetadot-switched">
			<default value="fcc/cws-pitch/thetadot-rad_sec"/>
			<test value="0">
				gear/unit[0]/WOW eq 1
			</test>
		</switch>
		
		<lead_lag_filter name="fcc/cws-pitch/thetadot-leadlag">
			<input>fcc/cws-pitch/thetadot-switched</input>
			<c1>1.05</c1>
			<c2>1.0</c2>
			<c3>0.97</c3>
			<c4>1.0</c4>
		</lead_lag_filter>
		
		<fcs_function name="fcc/cws-pitch/elevator-nul">
			<function>
				<ifthen>
					<eq>
						<property>fcc/cws-pitch/in-detent</property>
						<value>1</value>
					</eq>
					<value>0</value>
					<property>/controls/flight/elevator</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/cws-pitch/input">
			<function>
				<table>
					<independentVar lookup="row">attitude/pitch-rad</independentVar>
					<independentVar lookup="column">fcc/cws-pitch/elevator-nul</independentVar>
					<tableData>
						          -1    0    1
						-0.349066 -1.0 -1.0  0.5
						-0.174533 -1.0  0.0  1.0
						 0.383972 -1.0  0.0  1.0
						 0.558505 -0.5  1.0  1.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="fcc/cws-pitch/input-switch">
			<default value="fcc/cws-pitch/input"/>
			<test value="0">
				fcc/cws-pitch/in-detent eq 1
			</test>
		</switch>
		
		<scheduled_gain name="fcc/cws-pitch/input-gain">
			<input>fcc/cws-pitch/input-switch</input>
			<table>
				<independentVar lookup="row">velocities/vc-kts</independentVar>
				<tableData>
					140  0.83
					360  1.00
				</tableData>
			</table>
		</scheduled_gain>
		
		<actuator name="fcc/cws-pitch/input-slow">
			<input>fcc/cws-pitch/input-gain</input>
			<rate_limit>1.0</rate_limit>
		</actuator>
		
		<lag_filter name="fcc/cws-pitch/input-demand">
			<input>fcc/cws-pitch/input-slow</input>
			<c1>3.5</c1>
		</lag_filter>
		
		<pure_gain name="fcc/cws-pitch/rate-demand">
			<input>fcc/cws-pitch/input-demand</input>
			<gain>-0.087266</gain>
		</pure_gain>
		
		<summer name="fcc/cws-pitch/rate-error">
			<input>fcc/cws-pitch/thetadot-leadlag</input>
			<input>-fcc/cws-pitch/rate-demand</input>
		</summer>
		
		<switch name="fcc/cws-pitch/trigger">
			<default value="0"/>
			<test value="-1">
				fcc/cws/active ne 1
			</test>
			<test logic="OR" value="1">
				fcc/cws-pitch/pid le -0.999
				fcc/cws-pitch/pid ge 0.999
			</test>
		</switch>
		
		<pid name="fcc/cws-pitch/pid">
			<input>fcc/cws-pitch/rate-error</input>
			<kp>fcc/cws-pitch/p-gain</kp>
			<ki>fcc/cws-pitch/i-gain</ki>
			<kd>fcc/cws-pitch/d-gain</kd>
			<trigger>fcc/cws-pitch/trigger</trigger>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</pid>
		
		<lag_filter name="fcc/cws-pitch/output">
			<input>fcc/cws-pitch/pid</input>
			<c1>10</c1>
		</lag_filter>
		
		<switch name="fcc/pitch-output">
			<default value="/controls/flight/elevator"/>
			<test value="fcc/cws-pitch/output">
				fcc/cws/active eq 1
			</test>
			<test value="fcc/afs/pitch-cmd">
				fcc/afs/enabled eq 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="FCC: Elevator Feel">
		
		<switch name="fcc/elevator-feel/power">
			<default value="0"/>
			<test logic="OR" value="1">
				/systems/electrical/bus/dc-1 ge 24
				/systems/electrical/bus/dc-2 ge 24
				/systems/electrical/bus/dc-3 ge 24
				/systems/electrical/bus/l-emer-dc ge 24
				/systems/electrical/bus/r-emer-dc ge 24
			</test>
		</switch>
		
		<switch name="fcc/elevator-feel/auto">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fcc/switches/elevator-feel-man ne 1
				fcc/elevator-feel/power eq 1
				/systems/failures/fcc/elevator-feel ne 1
			</test>
		</switch>
		
		<switch name="fcc/elevator-feel/switch"> <!-- Manual knob control is in libraries.xml -->
			<default value="fcc/elevator-feel/speed"/>
			<test value="velocities/vc-kts">
				fcc/elevator-feel/auto eq 1
			</test>
			<output>fcc/elevator-feel/speed</output>
			<clipto>
				<min>120</min>
				<max>300</max>
			</clipto>
		</switch>
		
		<fcs_function name="fcc/elevator-feel/gain">
			<function>
				<table>
					<independentVar lookup="row">fcc/elevator-feel/speed</independentVar>
					<tableData>
						120  1.000
						140  0.975
						200  0.850
						300  0.625
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<pure_gain name="fcc/elevator-feel/output">
			<input>fcc/pitch-output</input>
			<gain>fcc/elevator-feel/gain</gain>
		</pure_gain>
		
		<pure_gain name="fcc/elevator-feel/afs-output">
			<description>Schedule the AFS the same as yoke for when AFS is disconnected with yoke movement</description>
			<input>fcc/afs/pitch-cmd</input>
			<gain>fcc/elevator-feel/gain</gain>
		</pure_gain>
		
		<switch name="fcc/elevator-output">
			<default value="fcc/elevator-feel/output"/>
			<test value="fcc/elevator-feel/afs-output">
				fcc/afs/enabled eq 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="FCC: Yaw Axis and Yaw Damper">
		
		<switch name="fcc/yaw/autoland-switch">
			<default value="0"/>
			<test logic="AND" value="1">
				fcc/afs/enabled eq 1
				/it-autoflight/output/lat eq 4
			</test>
		</switch>
		
		<fcs_function name="fcc/yaw/rudder-nul">
			<function>
				<table>
					<independentVar lookup="row">/controls/flight/rudder</independentVar>
					<independentVar lookup="column">fcc/yaw/autoland-switch</independentVar>
					<tableData>
						       0  1
						-1.00 -1  0
						-0.02  0  0
						 0.02  0  0
						 1.00  1  0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<washout_filter name="fcc/yaw/r-washout">
			<input>velocities/r-rad_sec</input>
			<c1>0.5</c1>
		</washout_filter>
		
		<switch name="fcc/yaw/r-switched">
			<default value="fcc/yaw/r-washout"/>
			<test logic="OR" value="0">
				fcc/yaw/active ne 1
				fcc/yaw/autoland-switch eq 1
			</test>
		</switch>
		
		<scheduled_gain name="fcc/yaw/yd-p-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/yaw/yd-p-gain</input>
			<table>
				<independentVar lookup="row">fcc/yaw/channels-active</independentVar>
				<tableData>
					0  1
					1  2
					2  1
				</tableData>
			</table>
		</scheduled_gain>
		
		<pure_gain name="fcc/yaw/yd-f">
			<input>fcc/yaw/r-switched</input>
			<gain>fcc/yaw/yd-p-gain-scheduled</gain>
			<clipto>
				<min>-0.5</min>
				<max>0.5</max>
			</clipto>
		</pure_gain>
		
		<switch name="fcc/yaw/slip-skid-raw">
			<default value="aero/beta-rad"/>
			<test value="0">
				position/wow eq 1
			</test>
		</switch>
		
		<lag_filter name="fcc/yaw/slip-skid">
			<input>fcc/yaw/slip-skid-raw</input>
			<c1>2.5</c1>
		</lag_filter>
		
		<scheduled_gain name="fcc/yaw/tc-p-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/yaw/tc-p-gain</input>
			<table>
				<independentVar lookup="row">fcc/yaw/channels-active</independentVar>
				<tableData>
					0  1
					1  2
					2  1
				</tableData>
			</table>
		</scheduled_gain>
		
		<scheduled_gain name="fcc/yaw/tc-d-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/yaw/tc-d-gain</input>
			<table>
				<independentVar lookup="row">fcc/yaw/channels-active</independentVar>
				<tableData>
					0  1
					1  2
					2  1
				</tableData>
			</table>
		</scheduled_gain>
		
		<pid name="fcc/yaw/tc-pd">
			<input>fcc/yaw/slip-skid</input>
			<kp>fcc/yaw/tc-p-gain-scheduled</kp>
			<ki>0.0</ki>
			<kd>fcc/yaw/tc-d-gain-scheduled</kd>
			<clipto>
				<min>-0.2</min>
				<max>0.2</max>
			</clipto>
		</pid>
		
		<switch name="fcc/yaw/tc-pd-s">
			<default value="fcc/yaw/tc-pd"/>
			<test logic="OR" value="0">
				fcc/yaw/active ne 1
				fcc/yaw/autoland-switch eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/afs-cmd">
			<default value="0"/>
			<test value="fcc/afs/yaw-cmd">
				fcc/yaw/autoland-switch eq 1
			</test>
		</switch>
		
		<summer name="fcc/yaw/output-sum">
			<input>fcc/yaw/yd-f</input>
			<input>fcc/yaw/tc-pd-s</input>
			<input>fcc/yaw/afs-cmd</input>
		</summer>
		
		<switch name="fcc/yaw/upper-output">
			<default value="fcc/yaw/afs-cmd"/> <!-- AFS keeps working even if YD is unavail -->
			<test value="fcc/yaw/output-sum">
				fcc/yaw/upper-active eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/lower-output">
			<default value="fcc/yaw/afs-cmd"/> <!-- AFS keeps working even if YD is unavail -->
			<test value="fcc/yaw/output-sum">
				fcc/yaw/lower-active eq 1
			</test>
		</switch>
		
		<summer name="fcc/rudder-upper-output">
			<input>fcc/yaw/rudder-nul</input>
			<input>fcc/yaw/upper-output</input>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</summer>
		
		<summer name="fcc/rudder-lower-output">
			<input>fcc/yaw/rudder-nul</input>
			<input>fcc/yaw/lower-output</input>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</summer>
	
	</channel>

</system>
